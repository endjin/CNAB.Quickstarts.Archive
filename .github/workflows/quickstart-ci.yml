name: Quickstart CI

on: 
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master

jobs:
  build-and-publish:
    name: Build & Publish
    runs-on: ubuntu-latest
    steps:
      - name: Echo environment variables
        run: 'gci Env:'
        shell: pwsh

      - name: Checkout Repo
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Fetch tags
        run: |
          git fetch --tags
          git branch --create-reflog master origin/master

      - name: Validate & detect quickstart solution changes
        id: validate_and_detect_qs_changes
        uses: endjin/CNAB.Quickstarts.GitHub.Actions/validate-and-detect-quickstart-changes@master
        with:
          repo_name: ${{ github.repository }}
          trigger: ${{ github.event_name }}
          pr_number: ${{ github.event.number }}
          source_version: ${{ github.sha }}

      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true'
        name: Docker Registry Login
        uses: azure/container-actions/docker-login@master
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          login-server: ${{ secrets.REGISTRY_SERVER }}
      
      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && steps.validate_and_detect_qs_changes.outputs.quickstart_tool == 'porter'
        name: Parse Porter manifest
        id: parse_porter_manifest
        uses: endjin/CNAB.Quickstarts.GitHub.Actions/parse-porter-manifest@master
        with:
          manifest_path: ${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}/porter.yaml

      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && steps.validate_and_detect_qs_changes.outputs.quickstart_tool == 'porter'
        name: Write temporary GitVersion config file
        run: |
          GITVERSION_CONFIG_PATH=$GITHUB_WORKSPACE/${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}/gitversion.yml
          CONTENTS="next-version: ${{ steps.parse_porter_manifest.outputs.version }}"
          echo "Writing temporary Gitversion config file with contents '$CONTENTS' to path '${GITVERSION_CONFIG_PATH}'"
          echo $CONTENTS > $GITVERSION_CONFIG_PATH
        
      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && steps.validate_and_detect_qs_changes.outputs.quickstart_tool == 'porter'
        name: Set GitVersion
        id: set_gitversion
        uses: docker://gittools/gitversion:5.0.2-linux
        with:
          args: '-nocache -output buildserver -exec /bin/bash -execargs "-c \"echo $GitVersion_FullSemVer > /github/workspace/version.txt\""'

      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && steps.validate_and_detect_qs_changes.outputs.quickstart_tool == 'porter'
        name: Install Porter
        id: install_porter
        uses: endjin/CNAB.Quickstarts.GitHub.Actions/install-porter@master

      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && steps.validate_and_detect_qs_changes.outputs.quickstart_tool == 'porter'
        name: Build Porter bundle
        id: build_porter_bundle
        uses: endjin/CNAB.Quickstarts.GitHub.Actions/build-porter-bundle@master
        with:
          bundle_dir: ${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}

      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && steps.validate_and_detect_qs_changes.outputs.quickstart_tool == 'porter'
        name: Replace version and registry for bundle
        id: replace_version_and_registry
        uses: endjin/CNAB.Quickstarts.GitHub.Actions/replace-version-and-registry@master
        with:
          manifest_path: ${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}/porter.yaml
          version: ${{ steps.set_gitversion.fullsemver }}
          tag: ${{ steps.set_gitversion.fullsemver }}
          registry: ${{ secrets.REGISTRY_SERVER }}

      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && steps.validate_and_detect_qs_changes.outputs.quickstart_tool == 'porter'
        name: Publish Porter bundle
        id: publish_porter_bundle
        uses: endjin/CNAB.Quickstarts.GitHub.Actions/publish-porter-bundle@master
        with:
          bundle_dir: ${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}
          
      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && github.event_name == 'pull_request'
        name: Generate ARM template
        id: generate_arm_template
        uses: endjin/CNAB.ARM-Converter.GitHub.Actions/run-cnab-to-arm-tool@master
        with:
          bundle_path: ${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}/.cnab/bundle.json
          output_path: ${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}/azuredeploy.json
          
      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && github.event_name == 'pull_request'
        name: Generate readme
        id: generate_readme
        uses: endjin/CNAB.ARM-Converter.GitHub.Actions/generate-readme@master
        with:
          bundle_metadata_path: ${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}/.cnab/bundle.json
          instructions_path: ${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}/INSTRUCTIONS.md
          template_uri: https://raw.githubusercontent.com/${{ github.repository }}/${{ github.head_ref }}/${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}/azuredeploy.json
          output_path: ${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}/README.md

      - if: steps.validate_and_detect_qs_changes.outputs.build_is_required == 'true' && github.event_name == 'pull_request'
        name: Commit & push ARM template & readme if updated
        uses: endjin/git-auto-commit-action@master
        with:
          commit_message: "Update ARM template / readme for bundle '${{ steps.validate_and_detect_qs_changes.outputs.quickstart_solution_path }}'"
          branch: ${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

